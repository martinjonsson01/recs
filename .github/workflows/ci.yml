name: Cargo Build & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - master
      - '*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CI: 1
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3

      - name: Install minimal nightly-2023-05-04 with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-05-04
          override: true
          default: true
          components: rustfmt, clippy

      - name: Install alsa
        run: sudo apt-get install -y alsa

      - name: Install libasound2-dev
        run: sudo apt-get install -y libasound2-dev

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Compile
        run: cargo test --no-run --locked

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [ build ]

    steps:
      - uses: actions/checkout@v3

      - name: Install minimal nightly-2023-05-04
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-05-04
          override: true
          default: true

      - name: Install alsa
        run: sudo apt-get install -y alsa

      - name: Install libasound2-dev
        run: sudo apt-get install -y libasound2-dev

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Test
        run: cargo test --verbose

  bench:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [ build ]

    steps:
      - uses: actions/checkout@v3

      - name: Install minimal nightly-2023-05-04
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-05-04
          override: true
          default: true

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "v0-recs-benches"

      - name: Run benchmark
        run: cargo bench -- --output-format bencher | tee output.txt

      - name: Download previous benchmark data
        uses: actions/cache@v3
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          # Where the output from the benchmark tool is stored
          output-file-path: output.txt
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          alert-comment-cc-users: '@martinjonsson01'
