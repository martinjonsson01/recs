# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc bb9f190c0ae584fcba2cb1fee11a92846e05a576e50474c12ae2876e48a0b394 # shrinks to input = _SystemsAreOrderedAccordingToPrecedenceArgs { systems: [FunctionSystem {     system = read_a_write_b     parameters = (ecs::Read<scheduler::precedence::tests::A> ecs::Write<scheduler::precedence::tests::B>) } , FunctionSystem {     system = read_a_write_b     parameters = (ecs::Read<scheduler::precedence::tests::A> ecs::Write<scheduler::precedence::tests::B>) } , FunctionSystem {     system = read_a_write_b     parameters = (ecs::Read<scheduler::precedence::tests::A> ecs::Write<scheduler::precedence::tests::B>) } , FunctionSystem {     system = read_a_write_b     parameters = (ecs::Read<scheduler::precedence::tests::A> ecs::Write<scheduler::precedence::tests::B>) } ] }
cc 31ac29ab79b468ff16a8b2693eaa13ee7eb5a5b701650a3e0435a7f0dd1e2f1d # shrinks to input = _SystemsAreOrderedAccordingToPrecedenceArgs { systems: {FunctionSystem {     system = read_a     parameters = (ecs::Read<scheduler::precedence::tests::A>) } , FunctionSystem {     system = read_ab     parameters = (ecs::Read<scheduler::precedence::tests::A> ecs::Read<scheduler::precedence::tests::B>) } , FunctionSystem {     system = read_b_write_a     parameters = (ecs::Read<scheduler::precedence::tests::B> ecs::Write<scheduler::precedence::tests::A>) } , FunctionSystem {     system = read_a_write_b     parameters = (ecs::Read<scheduler::precedence::tests::A> ecs::Write<scheduler::precedence::tests::B>) } , FunctionSystem {     system = write_a     parameters = (ecs::Write<scheduler::precedence::tests::A>) } } }
